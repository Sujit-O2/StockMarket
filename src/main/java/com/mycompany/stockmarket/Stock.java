package com.mycompany.stockmarket;import java.awt.Color;import java.awt.Font;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.util.Date;import javax.swing.JButton;import javax.swing.JComboBox;import javax.swing.JDialog;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JOptionPane;import javax.swing.JScrollPane;import javax.swing.JTable;import javax.swing.SwingConstants;import javax.swing.Timer;/** * * @author sujit */public class Stock extends JFrame implements ActionListener{    JTable tt;    JButton buyNow,Back,buy;    JComboBox<String> qt;    Float qnt;    int id;    String Price,name;    JLabel tPrice;    JDialog payingS; SQLStocks sq=new SQLStocks();String alldet[];  public Stock(String alldet[]){      this.alldet=alldet;    setSize(1000,600);           setResizable(false);      setDefaultCloseOperation(EXIT_ON_CLOSE);                  String Column[]={"ID","NAME","PRICE"};      Object Data[][]= sq.getStocks();       tt=new JTable(Data,Column);      JScrollPane jj=new JScrollPane(tt);      jj.setBounds(20,30,700,500);      tt.setFont(new Font("null",Font.BOLD,14));      tt.getTableHeader().setFont(new Font("SansSerif", Font.BOLD, 16));      tt.getTableHeader().setBackground(Color.lightGray);                  Timer t1=new Timer(2000,e->{          refreshTable();       sq.updatePrice();      });      t1.start();           buyNow=new JButton("BUY NOW");      buyNow.setBounds(800,200,100,30);      Back=new JButton("HOME");      Back.setBounds(800,300,100,30);      buyNow.setBackground(Color.GREEN);      Back.setBackground(Color.red);      Back.addActionListener(this);      setLocationRelativeTo(null);         this.add(jj);         this.add(buyNow);         this.add(Back);         setLayout(null);      this.setVisible(true);      buyNow.addActionListener(this);        }     public void refreshTable() {        Object[][] newData = sq.getStocks();        for (int i = 0; i < newData.length; i++) {            for (int j = 0; j < newData[i].length; j++) {                tt.setValueAt(newData[i][j], i, j);  // update cell            }        }    }    @Override    public void actionPerformed(ActionEvent e) {        if(e.getSource()==buyNow){            int selectedRow  = tt.getSelectedRow();            if(selectedRow==-1){                JOptionPane.showMessageDialog(null, "Please Select a Stock");                            }            else{                 id=Integer.parseInt((String)tt.getValueAt(selectedRow, 0));                 name=""+tt.getValueAt(selectedRow, 1);                Price=""+tt.getValueAt(selectedRow, 2);                                              payingS=new JDialog(this,"paying");                                payingS.setLayout(null);                                payingS.setSize(400,200);                JLabel stkname=new JLabel("Stock : "+name);                JLabel ll=new JLabel("ENTER THE QNT : ");                String a[]={"1","2","3","4","5","6","7","8","9","10"};                qt=new JComboBox<>(a);                buy=new JButton("BUY");                qnt=Float.parseFloat(Price)*Float.parseFloat(qt.getSelectedItem().toString());                tPrice=new JLabel("TOTAL : "+qnt);                qt.addActionListener(this);                buy.addActionListener(this);                stkname.setBounds(0,10,400,30);                stkname.setFont(new Font("",Font.ITALIC|Font.BOLD,14));                stkname.setHorizontalAlignment(SwingConstants.CENTER);                stkname.setVerticalAlignment(SwingConstants.CENTER);                qt.setFont(new Font("",Font.PLAIN,12));                buy.setFont(new Font("",Font.PLAIN,12));                ll.setFont(new Font("",Font.PLAIN,12));                tPrice.setFont(new Font("",Font.PLAIN,12));                ll.setBounds(30,60,200,30);                ll.setHorizontalAlignment(SwingConstants.CENTER);                qt.setBounds(210,60,50,30);                tPrice.setBounds(100,100,150,30);                buy.setBounds(250,100,100,30);                qt.setBackground(Color.LIGHT_GRAY);                buy.setBackground(Color.GREEN);                                payingS.add(qt);                payingS.add(ll);                payingS.add(stkname);                payingS.add(buy);                payingS.add(tPrice);                payingS.setVisible(true);                payingS.setLocationRelativeTo(this);            }                    }        if(e.getSource()==qt){            qnt=Float.parseFloat(String.format("%.2f",Float.parseFloat(Price)*Float.parseFloat(qt.getSelectedItem().toString())));            tPrice.setText("TOTAL : "+qnt);        }        if (e.getSource()==buy){                      if(Float.parseFloat(alldet[2])>=qnt){                alldet[2]=""+(Float.parseFloat(alldet[2])-qnt);                                sq.setOwnStock(alldet[1], id, Price, qt.getSelectedItem().toString(),alldet[2]);                sq.setHist(alldet[1],"You Have Brought the stock "+name+" At "+alldet[2]+" on "+new Date());                payingS.setVisible(false);                                                     } else {              JOptionPane.showMessageDialog(null, "Insufficient Blance !!!");                          }                  }        if(e.getSource()==Back){            setVisible(false);            new User(alldet);                                }                                  }}